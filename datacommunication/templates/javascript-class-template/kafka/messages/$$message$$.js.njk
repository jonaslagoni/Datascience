{%- macro setData(schema) %}
    setData(
        {{schema | constructor}}
    ){
    {%- if schema.allOf() | length > 0 %}
        {%- for allOfSchema in schema.allOf() %}
        {{initGetSet(allOfSchema.uid())}}
        {%- endfor %}
    {%- endif %}
    {%- if schema.oneOf() | length > 0 %}
        {%- for oneOfSchemas in schema.oneOf() %}
        {{initGetSet(oneOfSchemas.uid())}}
        {%- endfor %}
    {%- endif %}
    {%- if schema.anyOf() | length > 0 %}
        {%- for anyOfSchema in schema.anyOf() %}
        {{initGetSet(anyOfSchema.uid())}}
        {%- endfor %}
    {%- endif %}
    {%- if schema.uid() | length %}
        {{initGetSet(schema.uid())}}
    {%- endif %}
    }
{% endmacro %}

{%- macro initGetSet(propertyName) %}
    this.{{propertyName}} = {{propertyName}};
{% endmacro %}

export class {{message.name() | upperFirst}} {
    constructor(){

    }

	{{ setData(message.payload())}}

    
    /**
    * Copy a js object into this.
    * @param {*} jsonObject the js object 
    */
    copyInto(jsonObject){        
        {%- if message.payload().allOf() | length > 0 %}
            {%- for allOfSchema in message.payload().allOf() %}
        {{initGetSet(allOfSchema.uid())}}
            {%- endfor %}
        {%- endif %}
        {%- if message.payload().oneOf() | length > 0 %}
            {%- for oneOfSchemas in message.payload().oneOf() %}
        {{initGetSet(oneOfSchemas.uid())}}
            {%- endfor %}
        {%- endif %}
        {%- if message.payload().anyOf() | length > 0 %}
            {%- for anyOfSchema in message.payload().anyOf() %}
        {{initGetSet(anyOfSchema.uid())}}
            {%- endfor %}
        {%- endif %}
        {%- if message.payload().uid() | length %}
        {{initGetSet(message.payload().uid())}}
        {%- endif %}
    }
}
